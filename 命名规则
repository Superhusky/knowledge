命名规则
1、包名:包名全部小写，连续的单词只是简单的链接在一起，不使用下划线。

2、类名:类名首字母大写，且以驼峰的方式命名:UpdateName。
	   :类名通常以名词或者是名词短语为主，接口名称以形容词或形容词短语为主。
	   :测试类名以它测试的类为名称的开始，且以Test结束:HashTest。

3、方法名:以驼峰的方式命名，且通常以动词或者动词短语为主。
		 :下划线有可能出现在JUnit测试方法名称中，用以分隔名称的逻辑组件。

4、常量名:首字母全部大写，且以下划线分隔单词。
		 注:每一个常量都是一个静态final字段，但不是所有的静态final字段都是常量，只有一直不变的才能视为常量。

5、非常量字段名:以小驼峰命名方式，通常为动词或者是动词短语

6、参数名:以小驼峰的命名方式命名，应避免使用单个字符命名。

编程实践
1、@Override:能用就用，只要是合法的那么都可以写上

2、捕获的异常:对异常不做响应的是极少正确的，也就是说那么大多数异常都要响应。如果确实不要在catch快中做出响应那么应该进行备注。
			 :在测试中，如果异常被命名为expected，则它可以不需要注释，用于确保抛出一个期望中的异常。

3、静态成员:使用类名调用静态的类成员，而不是具体的某个对象或表达式。

格式
1、使用大括号:大括号与if、while、do、for等一起使用的时候，不管里面内容是否为空，也应该把大括号加上。

2、对于非空格或块状结构，那么大括号应该遵循K&R命名规则
		:左大括号在前不换行
		:左大括号在后换行
		:右大括号在前换行
		:如果右大括号是一个语句，或者函数体或者是类的终止，则右大括号后换行；否则不换行。
			eg:如果大括号后面是else语句或逗号那么不换行
				return new MyClass() {
				  @Override public void method() {
				    if (condition()) {
				      try {
				        something();
				      } catch (ProblemException e) {
				        recover();
				      }
				    }
				  }
				};

3、一个空的块的结构状态里面什么也不包含，大括号可以简写为{}，且不换行。
		eg:如果它是一个多块语句的一部分(if/else 或 try/catch/finally) ，即使大括号内没内容，右大括号也要换行。//和上面的有不同的啊

4、块缩进:每当开始一个新的块，那么缩进两个空格，且当块结束的时候那么就要返回先前缩进两个空格位。

5、每个语句后面都要换行。

6、列限制:80到100，选择一个标准，如果超过那么就要换行
	例外:不可能满足列限制的行，例如url等
		:package和import必须要在一行
		:注释中那些可能被剪切并粘贴到shell中的命令行。

7、自动换行中从哪里断开
:方法名或者构造函数名与左括号留在同一行
:逗号与前面的内容留在同一行
:如果在赋值运算符处断开，通常的做法是在该符号后断开(比如=，它与前面的内容留在同一行)。这条规则也适用于foreach语句中的分号。
:如果在非赋值运算符处断开，那么在该符号前断开(比如+，它将位于下一行)。注意：这一点与Google其它语言的编程风格不同(如C++和JavaScript)。 这条规则也适用于以下“类运算符”符号：点分隔符(.)，类型界限中的&（<T extends Foo & Bar>)，catch块中的管道符号(catch (FooException | BarException e)

8、自动换行的时候至少缩进4个空格，自动换行时，第一行后的每一行至少比第一行多缩进4个空格，当连续存在自动换行的时候那么就有可能多缩进不止4个空格，语法元素存在多级的时候。两个连续的行使用相同的缩进的时候当且仅当它们开始同级语法元素。

9、空白(垂直空白)
:1、类内连续的成员之间:字段，构造函数，方法，嵌套类，静态初始化块，实例化初始块
	例外:两个连续字段之间的空行是可选的，用于字段的空行主要是对字段进行逻辑分组
:2、在函数体内，语句的逻辑分组间使用空行
:3、类内中第一个成员或者最后一个成员的空行是可以选的
:4、要满足文档中其他节的空行要求(import/package等)

10、空白(水平空行)

11、具体结构
1、枚举类:枚举常量间用逗号隔开，换行可选。没有方法和文档的枚举可以写成数组初始化的格式。由于枚举也是类，那么使用类的格式也可以写枚举类
    :private enum Suit { CLUBS, HEARTS, SPADES, DIAMONDS }
2、声明变量
:每次只声明一个变量，不要使用组合声明:int a,b;
:需要时候才声明，并且尽快进行初始化
:不要在代码块的开头把局部变量一次性都声明了，而是在第一次使用的时候才声明，局部变量在声明的时候最好就初始化，或者声明后尽快初始化
3、数组初始化:可以写成块状结构，非c语言的数组声明:[]也是声明的一部分，这个时候要写成:String[] args。记住

12、switch
术语说明:switch块的大括号包含一个或多个语句组，每个语句组包含一个或多个switch标签，后面跟着一个或多个语句。
		与其它块状结构一致，switch块中的内容缩进为2个空格。
		每个switch标签后新起一行，再缩进2个空格，写下一条或多条语句。

13、注解:注解应紧跟文档块后面，应用于类、方法或者构造函数，一个注解独占一行。这些换行不属于自动换行，因此缩进等级不变
	例外:单个注解可以和签名的第一行出现在同一行中。@Override public int hashCode() { ... }
		:应用于字段的注解紧随文档块出现，应用于字段的多个注解允许与字段出现在同一行。例如：
				@Partial @Mock DataLoader loader;

14、注释
:块注释与其周围的代码同属于一个缩进级别，它们可以是/*    */这个样子的，也可以是//......这个样子的，对于多行注释，后续行的必须从*开始，并且与前一行的*对齐。

源文件结构
1、一个源文件包含(按顺序地)：
	许可证或版权信息(如有需要)
	package语句
	import语句
	一个顶级类(只有一个)
	以上每个部分之间用一个空行隔开。

2、package/import语句不换行

3、类声明:每一个顶积类都在与它同名的源文件中

4、类成员顺序:每一个类都要以相应的逻辑顺序来排序他的成员，比如新的方法不能老是直接放到最后面，那么这样的就是按照时间排序而不是按照某种逻辑顺序排序的了