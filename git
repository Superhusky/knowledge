1、git clone <版本库网址> 获取资源

2、git clone <版本库网址> <本地目录名>

3、git clone 支持多种协议(https,ssh,git等)
	{
		git速度最快,ssh用于需要用户认证的场合
	}

4、git要求每个远程主机都必需要制定一个主机名,git remote 用于管理主机名
	缺省的时候git remote罗列出所有主机的名字
	eg:缺省

5、git remote -v 可以参看远程主机的网址

6、克隆版本的时候,所有的主机名都会被git自动命名为origin,如果想用其他名字,git clone -o

7、git remote show <主机名> 可以看到主机名上的所有信息

8、git remote add <主机名> <网址> 用于添加远程主机

9、git remote rm <主机名> 用于删除远程主机

10、git remote rename <主机名> <新主机名> 

11、git fetch <主机名> 将更新取回本地
	缺省是取回主机上所有分支的更新

12、git fetch <主机名> <分支名>

13、所取回的更新在本地上要用主机名/分支名来读取
	git branch -r 查看远程分支
	git branch -a 查看所有分支

14、git pull的作用就是取回远程主机上某个分支,再与本地分支进行合并
	git pull <远程主机名> <远程分支名>:<本地分支>
		如果是远程分支和当前分支合并,后面的不需要写
	eg: git pull origin next:next1

15、git pull 的作用 是git fetch + git meger

16、在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git
	clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动"追踪"origin/master分支。

17、git push 将本地分支的更新推送到远程分支上

18、git push <远程主机> <本地分支>:<远程分支>

19、git push <远程主机> <本地分支> 
	表示将本地分支推送到远程本机上,如果没有这个分支的话,那么新建一个

20、git push <远程主机> :<远程分支>
	表示删除指定远程分支,因为这等同于推送一个空的文件到远程分支

21、如果当前分支与远程主机之间存在追踪关系，则本地分支和远程分支都可以省略。

22、如果当前分支与多个主机存在追踪关系,则可以使用 -u指定一个默认的主机
	git push -u origin master 

23、不带任何参数的git push 叫做simple方式
	还有一种是matching,会将所有有对应的远程分支的本地分支,
	将本地所有分支全部推送到远程主机上: --all
	eg:git push -all origin

24 如果远程主机上版本比本地版本的要新,那么要先pull,不然会报错
	上面命令使用--force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用--force选项。

25、git 不会推送tag(标签),除非使用 git push  --tag

26、q键表示查询

27、删除分支的步骤
	{
		1、git branch -d test
		2、git push -r -d origin/test //删除远程主机上的
		3、git push --delete test 
	}

28、新建分支
	{
		1、git branch test //创建本地分支
		2、git push origin test //创建远程主机分支
	}